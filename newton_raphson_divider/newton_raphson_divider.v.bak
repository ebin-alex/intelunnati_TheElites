module newton_raphson_divider (
  input clk,
  input rst,
  input [31:0] dividend,
  input [31:0] divisor,
  output reg [31:0] quotient,
  output reg [31:0] remainder
);

  reg [31:0] x, dx;
  integer i;

  always @(posedge clk or posedge rst) begin
    if (rst) begin
      x <= 0;
      quotient <= 0;
      remainder <= 0;
    end else begin
      if (x != 0) begin
        dx = 2 - dividend * x;
        x = x * dx;
        quotient = quotient + 1;
      end
    end
  end

  always @(posedge clk) begin
    if (x == 0) begin
      remainder <= dividend;
    end
  end

endmodule