$date
	Fri Jun 23 13:34:27 2023
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module Rest_div_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 1 # start $end
$var reg 4 $ X [3:0] $end
$var reg 4 % Y [3:0] $end
$var wire 1 & quot [3] $end
$var wire 1 ' quot [2] $end
$var wire 1 ( quot [1] $end
$var wire 1 ) quot [0] $end
$var wire 1 * rem [3] $end
$var wire 1 + rem [2] $end
$var wire 1 , rem [1] $end
$var wire 1 - rem [0] $end
$var wire 1 . valid $end

$scope module inst $end
$var parameter 1 / IDLE $end
$var parameter 1 0 START $end
$var wire 1 1 clk $end
$var wire 1 2 rst $end
$var wire 1 3 start $end
$var wire 1 4 X [3] $end
$var wire 1 5 X [2] $end
$var wire 1 6 X [1] $end
$var wire 1 7 X [0] $end
$var wire 1 8 Y [3] $end
$var wire 1 9 Y [2] $end
$var wire 1 : Y [1] $end
$var wire 1 ; Y [0] $end
$var wire 1 & quot [3] $end
$var wire 1 ' quot [2] $end
$var wire 1 ( quot [1] $end
$var wire 1 ) quot [0] $end
$var wire 1 * rem [3] $end
$var wire 1 + rem [2] $end
$var wire 1 , rem [1] $end
$var wire 1 - rem [0] $end
$var reg 1 < valid $end
$var reg 8 = Z [7:0] $end
$var reg 8 > next_Z [7:0] $end
$var reg 2 ? count [1:0] $end
$var reg 2 @ next_count [1:0] $end
$var reg 1 A next_state $end
$var reg 1 B pres_state $end
$var reg 1 C next_valid $end
$var reg 8 D Z_temp [7:0] $end
$var reg 8 E Z_temp1 [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x!
1"
0#
b0 $
b11 %
x<
bx =
bx >
bx ?
bx @
xA
xB
xC
bx D
bx E
b0 /
b1 0
x)
x(
x'
x&
x-
x,
x+
x*
x.
1;
1:
09
08
07
06
05
04
03
12
x1
$end
#10
0"
02
b0 =
0<
0B
b0 ?
0-
0,
0+
0*
0)
0(
0'
0&
0.
b0 @
0C
0A
b0 >
#20
1#
13
1A
#30
0#
03
0A
